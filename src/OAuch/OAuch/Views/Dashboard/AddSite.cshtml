@using Microsoft.AspNetCore.Html
@using OAuch.Compliance
@model OAuch.ViewModels.AddSiteViewModel
@{
    ViewData["Title"] = "Add a new site";

    IHtmlContent CreateDocumentOption(string id, string title, IEnumerable<OAuthDocument> docs) {
        var isDocumentSelected = Model.SelectedInitialDocuments == id;
        string docText;
        if (docs.Count() == ComplianceDatabase.AllDocuments.Count) {
            docText = "This includes tests from all the standards documents that are supported in OAuch";
        } else {
            docText = $"This includes tests from the following documents: {string.Join(", ", docs.Select(d => d.Id))}";
        }
        string dataContent = $"<div class='od'><strong>{title}</strong><br/><em>{docText}</em></div>";
        return new HtmlString($"<option value=\"{id}\" title=\"{title}\" data-content=\"{dataContent}\"{(isDocumentSelected ? " selected" : "")}></option>");
    }
}
<h1 class="display-4">Add a new site</h1>
<p>
    Please enter a name for the site you wish to add. Only alphanumeric characters and
    some special characters ('.', '_', ' ') are allowed in the name of the site.
</p>

<div asp-validation-summary="All" class="text-danger"></div>
@using (Html.BeginForm()) {
    <div class="row">
        <div class="col-12 col-sm-10 col-md-9 col-lg-7 col-xl-4">
            <div class="form-group">
                @Html.LabelFor(c => c.Name)
                @Html.TextBoxFor(c => c.Name, new { @class = "form-control", placeholder = "(site name)" })
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.MetadataUrl)
                @Html.TextBoxFor(c => c.MetadataUrl, new { @class = "form-control", placeholder = "https://your.authorizationserver.com" })
                <small id="issueUrlHelp" class="form-text text-muted">
                    This optional parameter can be used to automatically search
                    for OAuth metadata on the server and fill in a number of parameters automatically. If you are not sure what the
                    metadata url is, try filling in the url of the authorization server.
                </small>
            </div>
            <div class="form-group">
                @Html.LabelFor(c => c.SelectedInitialDocuments)
                <select id="SelectedInitialDocuments" name="SelectedInitialDocuments" class="selectpicker show-tick" data-width="100%">
                    @foreach (var c in Model.InitialDocuments!) {
                        <text>@CreateDocumentOption(c.Key, c.Value.Title, c.Value.Documents)</text>
                    }
                </select>
                <small id="ScopeHelp" class="form-text text-muted">
                    Select the initial set of OAuth-related standards to test the implementation against. By default, OAuch will test it against
                    the OAuth 2.0 standard (including the latest best practices). You can adjust the selected documents before running a test run.
                    For more information on the individual standard documents, visit the @Html.ActionLink("document overview", "Index", "Documents", new {}, new {target = "_blank"}).
                </small>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-6 col-sm-5 col-md-4 col-lg-3 col-xl-2">
            <button type="submit" class="btn btn-block btn-primary">Add site</button>
        </div>
    </div>
}
@section Styles {
    <link rel="stylesheet" href="/plugins/bootstrap-select/css/bootstrap-select.min.css">
}
@section Scripts {
    <script src="/plugins/bootstrap-select/js/bootstrap-select.min.js"></script>
    <script>
        $(function () {
            $('.selectpicker').selectpicker(
                {
                    style: '',
                    styleBase: 'form-control'
                });
        });
    </script>
}